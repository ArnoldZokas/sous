#!/bin/sh

TAG="$1"

echo "DEBUG>>>>>>>>>>>>>>>>>>>>"
set -x
grep --version
grep --help
SEMVER='^v?\d+\.\d+\.\d+(\-[a-zA-Z0-9_\-\.]+)?(\+[a-zA-Z0-9_\-\.]+)?'
echo "$TAG"
echo "$TAG" | grep -oE "$SEMVER"
pwd
ls -lah
git version
git status
git add -A .
git status
git reset
git status
git diff-index HEAD
git diff-index -p HEAD
git rev-parse --show-toplevel
git diff
git rev-parse HEAD
git rev-parse --abbrev-ref HEAD
git describe --exact-match --abbrev=0
git describe --abbrev=0
env
set +x
echo "<<<<<<<<<<<<<<<<<<<<DEBUG"

[ -z "$TAG" ] && { echo "Not tagged - not running build/publish"; exit 0; }

PRERELEASE=""
echo "$TAG" | grep -E '\-' && PRERELEASE="--pre-release"

# Build the archives
./bin/build "$TAG" || { echo "Build failed."; exit 1; }

# github-release config
[ -z "$GITHUB_TOKEN" ] && export GITHUB_TOKEN="$GH_ACCESS"
[ -z "$GITHUB_USER" ]  && export GITHUB_USER=opentable
[ -z "$GITHUB_REPO" ]  && export GITHUB_REPO=sous

go get github.com/aktau/github-release || { exit 1; } 

# Transform the tag into a release if it's not already.
if ! github-release info -t "$TAG" > /dev/null 2>&1; then
	echo "Converting tag $TAG into GitHub release..."
	# Get the tag message by itself.
	MSG="$(git tag -ln999 "$TAG" | sed "s/$TAG  //")"
	github-release release -t "$TAG" -d "$MSG" -n "$TAG" -c "$COMMIT" $PRERELEASE || {
		echo "Failed to create release."
		exit 1;
	}
fi

# Upload the archives.
FAILED=NO
find artifacts/*.tar.gz | {
	while read -r FILEPATH; do 
		FILENAME="$(basename "$FILEPATH")"
		echo "Uploading archive $FILENAME..."
		github-release upload -t "$TAG" -f "$FILEPATH" -n "$FILENAME" || {
			echo "Upload failed."
			FAILED=YES
		}
	done
	[ "$FAILED" = "YES" ] && exit 1
}

